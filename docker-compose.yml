version: '2.4'

x-networkName: &networkName "default"

x-default: &default
  dns:
    - 1.1.1.1
    - 1.0.0.1

networks:
  *networkName:
    ipam:
      driver: default

services:

  nginx:
    <<: *default
    image: nginx:${NGINX_VERSION}
    ports:
      - ${NGINX_HTTP_PORT}:${NGINX_HTTP_PORT}
      - ${NGINX_HTTPS_PORT}:${NGINX_HTTPS_PORT}
    volumes:
      - ./upstream.conf.template:/etc/nginx/templates/default.conf.template
      - ${LETSENCRYPT_DATA_PATH}/conf:/etc/letsencrypt
      - ${LETSENCRYPT_DATA_PATH}/www:/var/www/certbot
    environment:
      - NGINX_HOST=${NGINX_HOST}
      - NGINX_HTTP_PORT=${NGINX_HTTP_PORT}
      - NGINX_HTTPS_PORT=${NGINX_HTTPS_PORT}
      - UPSTREAM_HOST=httpbin
      - UPSTREAM_PORT=80
    restart: always
    depends_on:
      - certbot
      - httpbin

  # To proxy to docker sock
  socat:
    image: bpack/socat:latest
    command: TCP4-LISTEN:2375,fork,reuseaddr UNIX-CONNECT:/var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    expose:
      - 2375

  # Autorenew the letsencrypt certs
  certbot:
    image: certbot/certbot:${CERTBOT_VERSION}
    restart: always
    volumes:
      - ${LETSENCRYPT_DATA_PATH}/conf:/etc/letsencrypt
      - ${LETSENCRYPT_DATA_PATH}/www:/var/www/certbot
    environment:
      DOCKER_HOST: tcp://socat:2375
      CONTAINER_TO_RESTART: ${COMPOSE_PROJECT_NAME}_nginx_1
    depends_on:
      - socat
    entrypoint: >
      /bin/sh -c
      'apk add --no-cache docker-cli &&
      trap exit TERM; while :;
      do certbot renew --post-hook
      "docker restart $$CONTAINER_TO_RESTART";
      sleep 12h & wait $${!}; done;'
    # Here you can reload nginx process instead of whole container restart.

  httpbin:
    <<: *default
    image: kennethreitz/httpbin:latest
    networks:
      *networkName:
    ports:
      - 80